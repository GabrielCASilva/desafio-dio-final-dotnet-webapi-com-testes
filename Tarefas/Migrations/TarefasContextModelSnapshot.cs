// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarefas.Context;

#nullable disable

namespace Tarefas.Migrations
{
    [DbContext(typeof(TarefasContext))]
    partial class TarefasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TarefaPessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TarefaId")
                        .HasColumnType("int");

                    b.HasKey("PessoaId", "TarefaId");

                    b.HasIndex("TarefaId");

                    b.ToTable("TarefaPessoa");
                });

            modelBuilder.Entity("Tarefas.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Pedro Rodrigo da Silva"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Matheus Henrique da Silva"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Mariana Aparecida de Jesus"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Jessica Peixoto de Souza"
                        });
                });

            modelBuilder.Entity("Tarefas.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tarefas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2024, 5, 24, 10, 26, 20, 198, DateTimeKind.Local).AddTicks(3879),
                            Descricao = "Descrição da tarefa 1",
                            Status = 0,
                            Titulo = "Tarefa 1"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2024, 5, 24, 10, 26, 20, 198, DateTimeKind.Local).AddTicks(3894),
                            Descricao = "Descrição da tarefa 2",
                            Status = 0,
                            Titulo = "Tarefa 2"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2024, 5, 24, 10, 26, 20, 198, DateTimeKind.Local).AddTicks(3896),
                            Descricao = "Descrição da tarefa 3",
                            Status = 0,
                            Titulo = "Tarefa 3"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2024, 5, 24, 10, 26, 20, 198, DateTimeKind.Local).AddTicks(3897),
                            Descricao = "Descrição da tarefa 4",
                            Status = 0,
                            Titulo = "Tarefa 4"
                        });
                });

            modelBuilder.Entity("TarefaPessoa", b =>
                {
                    b.HasOne("Tarefas.Models.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarefas.Models.Tarefa", null)
                        .WithMany()
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
